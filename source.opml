<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Sun, 17 Sep 2023 17:32:47 GMT -->

<!-- 
   Hi this is Dave Winer. I write all my project code in an outliner, which 
   generates all the files that make up this GitHub project. You'll see a 
   source.opml file like this in each of my projects. It contains the outline 
   source that the repo files were generated from. This is the most logical place 
   to store them. You can read the code in any outliner that supports OPML, which 
   includes https://drummer.land. You can use the Open URL command in 
   Drummer's File menu to open the "raw" version of this file straight from the 
   GitHub repo.
 -->

<opml version="2.0">
	<head>
		<title>nodeEditor: newsProductServer</title>
		<dateCreated>Wed, 10 Aug 2022 14:21:22 GMT</dateCreated>
		<dateModified>Sun, 17 Sep 2023 17:32:47 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 2, 3, 14, 16, 22, 23, 25, 30</expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>186</windowTop>
		<windowLeft>760</windowLeft>
		<windowBottom>1146</windowBottom>
		<windowRight>2025</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/newsproduct/" created="Mon, 09 May 2022 14:37:18 GMT">
			<outline text="worknotes.md" created="Sat, 16 Jul 2022 17:51:06 GMT">
				<outline text="#### 9/17/23; 12:29:10 PM by DW" created="Sun, 17 Sep 2023 16:29:09 GMT">
					<outline text="We now get the content from FeedLand server. No longer need a separate app to do this job." created="Sun, 17 Sep 2023 16:29:10 GMT"/>
					<outline text="Saved a snapshot in the backup folder here. " created="Sun, 17 Sep 2023 17:29:11 GMT"/>
					</outline>
				<outline text="#### 1/18/23; 10:55:37 AM by DW" created="Wed, 18 Jan 2023 15:55:34 GMT">
					<outline text="Now it works with the feedlandInstall package. New instructions for installing.  " created="Wed, 18 Jan 2023 15:55:37 GMT"/>
					</outline>
				<outline text="#### 8/24/22; 12:43:43 PM by DW" created="Wed, 24 Aug 2022 16:43:42 GMT">
					<outline text="If a head-level att like title, description or image are undefined, set their value in the pagetable to the empty string. " created="Wed, 24 Aug 2022 16:43:43 GMT"/>
					</outline>
				<outline text="#### 8/22/22; 11:01:05 AM by DW" created="Mon, 22 Aug 2022 15:01:04 GMT">
					<outline text="Big changes" created="Mon, 22 Aug 2022 15:01:05 GMT">
						<outline text="we no longer expand includes on the server because we need to allow the list used for a tab to be an include. " created="Mon, 22 Aug 2022 15:01:15 GMT"/>
						<outline text="instead of sending over a feedUrlList, we send over the link to an OPML file, if the node for tab is an include" created="Mon, 22 Aug 2022 15:01:41 GMT">
							<outline text="if it's not -- business as usual" created="Mon, 22 Aug 2022 15:02:20 GMT"/>
							</outline>
						<outline text="" created="Mon, 22 Aug 2022 15:02:29 GMT"/>
						</outline>
					</outline>
				<outline text="#### 8/9/22; 12:03:45 PM by DW" created="Sat, 16 Jul 2022 17:51:09 GMT">
					<outline text="Started." created="Sat, 16 Jul 2022 17:51:10 GMT"/>
					</outline>
				</outline>
			<outline text="package.json">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;newsproduct&quot;, "/>
					<outline text="&quot;version&quot;: &quot;0.4.0&quot;,"/>
					<outline text="&quot;description&quot;: &quot;Render an OPML template as a news product.&quot;," created="Tue, 09 Aug 2022 14:41:57 GMT"/>
					<outline text="&quot;author&quot;: &quot;Dave Winer &lt;dave@scripting.com&gt;&quot;,"/>
					<outline text="&quot;main&quot;: &quot;newsproduct.js&quot;,"/>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;request&quot;: &quot;*&quot;,"/>
						<outline text="&quot;davehttp&quot;: &quot;*&quot;"/>
						<outline text="&quot;davesql&quot;: &quot;*&quot;," isComment="true"/>
						<outline text="&quot;daveappserver&quot;: &quot;*&quot;," isComment="true"/>
						<outline text="&quot;feedlanddatabase&quot;: &quot;*&quot;," isComment="true"/>
						<outline text="&quot;opml&quot;: &quot;*&quot;" isComment="true" created="Fri, 19 Nov 2021 17:19:34 GMT"/>
						<outline text="} "/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="newsproduct.js" created="Sun, 17 Sep 2023 16:11:05 GMT">
				<outline text="const myVersion = &quot;0.5.0&quot;, myProductName = &quot;newsproduct&quot;;  " created="Mon, 03 Feb 2014 03:21:03 GMT" pgfnum="36831"/>
				<outline text="" created="Sun, 17 Sep 2023 16:11:47 GMT"/>
				<outline text="const fs = require (&quot;fs&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const request = require (&quot;request&quot;); " created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const davehttp = require (&quot;davehttp&quot;);  "/>
				<outline text="const utils = require (&quot;daveutils&quot;);  "/>
				<outline text="" created="Sun, 17 Sep 2023 16:11:49 GMT"/>
				<outline text="var config = { ">
					<outline text="port: process.env.PORT || 1408,"/>
					<outline text="flLogToConsole: true,"/>
					<outline text="flTraceOnError: false, //davehttp does not try to catch the error" created="Fri, 16 Dec 2022 21:13:38 GMT"/>
					<outline text="flAllowAccessFromAnywhere: true"/>
					<outline text="};"/>
					</outline>
				<outline text="" created="Sun, 17 Sep 2023 16:11:50 GMT"/>
				<outline text="" created="Sun, 17 Sep 2023 16:32:41 GMT"/>
				<outline text="function getContentFromFeedland (urlTemplate, callback) {" created="Sun, 17 Sep 2023 16:32:24 GMT">
					<outline text="if (urlTemplate === undefined) {" created="Sun, 17 Sep 2023 17:09:56 GMT">
						<outline text="const message = &quot;Can't get the news product because template parameter isn't provided.&quot;;" created="Sun, 17 Sep 2023 17:10:30 GMT"/>
						<outline text="callback ({message});" created="Sun, 17 Sep 2023 17:10:20 GMT"/>
						<outline text="}" created="Sun, 17 Sep 2023 17:10:04 GMT"/>
						</outline>
					<outline text="else {" created="Sun, 17 Sep 2023 17:10:05 GMT">
						<outline text="var urlServer = &quot;https://feedland.org/newsproduct?template=&quot; + urlTemplate;" created="Fri, 30 Sep 2022 15:16:56 GMT"/>
						<outline text="console.log (&quot;getContentFromFeedland: urlServer == &quot; + urlServer);" created="Sun, 17 Sep 2023 16:31:49 GMT"/>
						<outline text="request (urlServer, function (err, response, htmltext) {">
							<outline text="if (err) {">
								<outline text="callback (err);"/>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="if ((response.statusCode &gt;= 200) &amp;&amp; (response.statusCode &lt;= 299)) {" created="Fri, 15 Sep 2023 15:08:11 GMT">
									<outline text="callback (undefined, htmltext);"/>
									<outline text="}" created="Fri, 15 Sep 2023 15:08:21 GMT"/>
									</outline>
								<outline text="else {" created="Fri, 15 Sep 2023 15:08:22 GMT">
									<outline text="const message = &quot;HTTP error == &quot; + response.statusCode;" created="Fri, 15 Sep 2023 15:08:57 GMT"/>
									<outline text="callback ({message});" created="Fri, 15 Sep 2023 15:08:57 GMT"/>
									<outline text="}" created="Fri, 15 Sep 2023 15:08:24 GMT"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="}" created="Sun, 17 Sep 2023 17:10:07 GMT"/>
						</outline>
					<outline text="}" created="Sun, 17 Sep 2023 16:32:29 GMT"/>
					</outline>
				<outline text="" created="Sun, 17 Sep 2023 16:33:37 GMT"/>
				<outline text="davehttp.start (config, function (theRequest) {">
					<outline text="const params = theRequest.params;"/>
					<outline text="function returnError (err) {" created="Sun, 17 Sep 2023 16:17:12 GMT">
						<outline text="theRequest.httpReturn (500, &quot;text/plain&quot;, err.message);"/>
						<outline text="}" created="Sun, 17 Sep 2023 16:17:17 GMT"/>
						</outline>
					<outline text="function returnHtml (htmltext) {" created="Sun, 17 Sep 2023 16:17:12 GMT">
						<outline text="theRequest.httpReturn (200, &quot;text/html&quot;, htmltext);"/>
						<outline text="}" created="Sun, 17 Sep 2023 16:17:17 GMT"/>
						</outline>
					<outline text="function httpReturn (err, htmltext) {" created="Sun, 17 Sep 2023 16:17:12 GMT">
						<outline text="if (err) {" created="Sun, 17 Sep 2023 16:34:24 GMT">
							<outline text="returnError (err);" created="Sun, 17 Sep 2023 16:34:26 GMT"/>
							<outline text="}" created="Sun, 17 Sep 2023 16:34:30 GMT"/>
							</outline>
						<outline text="else {" created="Sun, 17 Sep 2023 16:34:31 GMT">
							<outline text="returnHtml (htmltext);" created="Sun, 17 Sep 2023 16:34:48 GMT"/>
							<outline text="}" created="Sun, 17 Sep 2023 16:34:33 GMT"/>
							</outline>
						<outline text="}" created="Sun, 17 Sep 2023 16:17:17 GMT"/>
						</outline>
					<outline text="switch (theRequest.lowerpath) {">
						<outline text="case &quot;/&quot;:">
							<outline text="getContentFromFeedland (params.template, httpReturn);" created="Sun, 17 Sep 2023 16:32:11 GMT"/>
							<outline text="return;"/>
							</outline>
						<outline text="case &quot;/now&quot;:">
							<outline text="theRequest.httpReturn (200, &quot;text/plain&quot;, new Date ());"/>
							<outline text="return;"/>
							</outline>
						<outline text="default:">
							<outline text="theRequest.httpReturn (404, &quot;text/plain&quot;, &quot;Not found.&quot;);"/>
							<outline text="return;"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="});"/>
					</outline>
				<outline text="" created="Sun, 17 Sep 2023 16:11:50 GMT"/>
				<outline text="" created="Sun, 17 Sep 2023 16:11:50 GMT"/>
				</outline>
			<outline text="backup/package.json">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;newsproduct&quot;, "/>
					<outline text="&quot;version&quot;: &quot;0.4.0&quot;,"/>
					<outline text="&quot;description&quot;: &quot;Render an OPML template as a news product.&quot;," created="Tue, 09 Aug 2022 14:41:57 GMT"/>
					<outline text="&quot;author&quot;: &quot;Dave Winer &lt;dave@scripting.com&gt;&quot;,"/>
					<outline text="&quot;main&quot;: &quot;newsproduct.js&quot;,"/>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;davesql&quot;: &quot;*&quot;,"/>
						<outline text="&quot;daveappserver&quot;: &quot;*&quot;,"/>
						<outline text="&quot;feedlanddatabase&quot;: &quot;*&quot;,"/>
						<outline text="&quot;opml&quot;: &quot;*&quot;" created="Fri, 19 Nov 2021 17:19:34 GMT"/>
						<outline text="} "/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="backup/newsproduct.js" created="Thu, 17 Feb 2022 14:26:38 GMT">
				<outline text="const myVersion = &quot;0.4.0&quot;, myProductName = &quot;newsproduct&quot;;  " created="Mon, 03 Feb 2014 03:21:03 GMT" pgfnum="36831"/>
				<outline text="" created="Thu, 07 Apr 2022 16:04:28 GMT"/>
				<outline text="const fs = require (&quot;fs&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const request = require (&quot;request&quot;); " created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const utils = require (&quot;daveutils&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const opml = require (&quot;opml&quot;); "/>
				<outline text="const daveappserver = require (&quot;daveappserver&quot;); "/>
				<outline text="const davegithub = require (&quot;davegithub&quot;); " isComment="true"/>
				<outline text="const davesql = require (&quot;davesql&quot;); //9/25/22 by DW" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const database = require (&quot;feedlanddatabase&quot;); //9/25/22 by DW" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="" created="Sat, 16 Jul 2022 17:52:55 GMT"/>
				<outline text="var config = {" created="Sat, 16 Jul 2022 17:52:56 GMT">
					<outline text="flExpandIncludes: false," created="Mon, 22 Aug 2022 14:55:24 GMT"/>
					<outline text="urlNewsProductSource: &quot;http://scripting.com/code/riverclient/index.html&quot;" created="Sun, 25 Sep 2022 15:33:45 GMT"/>
					<outline text="};" created="Sat, 16 Jul 2022 17:53:00 GMT"/>
					</outline>
				<outline text="var stats = {" created="Sat, 16 Jul 2022 18:15:43 GMT">
					<outline text="}" created="Sat, 16 Jul 2022 18:15:59 GMT"/>
					</outline>
				<outline text="" created="Sat, 16 Jul 2022 18:05:33 GMT"/>
				<outline text="function httpRequest (url, timeout, headers, callback) {">
					<outline text="request (url, function (err, response, data) {">
						<outline text="if (err) {" created="Sun, 08 Aug 2021 15:33:13 GMT">
							<outline text="callback (err);" created="Sun, 08 Aug 2021 15:33:17 GMT"/>
							<outline text="}" created="Sun, 08 Aug 2021 15:33:20 GMT"/>
							</outline>
						<outline text="else {" created="Sun, 08 Aug 2021 15:33:21 GMT">
							<outline text="if (response.statusCode != 200) {" created="Sun, 08 Aug 2021 15:33:23 GMT">
								<outline text="const message = &quot;The request returned a status code of &quot; + response.statusCode + &quot;.&quot;;" created="Sun, 08 Aug 2021 15:34:06 GMT"/>
								<outline text="callback ({message});" created="Sun, 08 Aug 2021 15:34:43 GMT"/>
								<outline text="}" created="Sun, 08 Aug 2021 15:33:28 GMT"/>
								</outline>
							<outline text="else {" created="Sun, 08 Aug 2021 15:33:29 GMT">
								<outline text="callback (undefined, data) "/>
								<outline text="}" created="Sun, 08 Aug 2021 15:33:31 GMT"/>
								</outline>
							<outline text="}" created="Sun, 08 Aug 2021 15:33:33 GMT"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function httpReadOutline (urlOpmlFile, callback) {" created="Wed, 24 Nov 2021 16:02:41 GMT">
					<outline text="httpRequest (urlOpmlFile, undefined, undefined, function (err, opmltext) {" created="Thu, 17 Jun 2021 19:56:51 GMT">
						<outline text="if (err) {" created="Sun, 08 Aug 2021 15:12:18 GMT">
							<outline text="callback (err);" created="Sun, 08 Aug 2021 15:14:05 GMT"/>
							<outline text="}" created="Sun, 08 Aug 2021 15:14:10 GMT"/>
							</outline>
						<outline text="else {" created="Sun, 08 Aug 2021 15:12:29 GMT">
							<outline text="opml.parse (opmltext, function (err, theOutline) {">
								<outline text="if (err) {">
									<outline text="callback (err);"/>
									<outline text="}"/>
									</outline>
								<outline text="else {">
									<outline text="callback (undefined, theOutline);" created="Mon, 09 Aug 2021 16:19:53 GMT"/>
									<outline text="}"/>
									</outline>
								<outline text="});"/>
								</outline>
							<outline text="}" created="Sun, 08 Aug 2021 15:12:31 GMT"/>
							</outline>
						<outline text="})" created="Thu, 17 Jun 2021 19:58:33 GMT"/>
						</outline>
					<outline text="}" created="Wed, 24 Nov 2021 16:02:54 GMT"/>
					</outline>
				<outline text="function readObject (f, theConfig, callback) { ">
					<outline text="utils.sureFilePath (f, function () {" created="Mon, 13 Dec 2021 22:26:43 GMT">
						<outline text="fs.readFile (f, function (err, jsontext) {">
							<outline text="if (!err) {">
								<outline text="try {">
									<outline text="var jstruct = JSON.parse (jsontext);"/>
									<outline text="for (var x in jstruct) {">
										<outline text="theConfig [x] = jstruct [x];"/>
										<outline text="}"/>
										</outline>
									<outline text="}"/>
									</outline>
								<outline text="catch (err) {">
									<outline text="console.log (&quot;readObject: f = &quot; + f + &quot;, err.message == &quot; + err.message);"/>
									<outline text="}"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="callback ();"/>
							<outline text="});"/>
							</outline>
						<outline text="});" created="Mon, 13 Dec 2021 22:26:51 GMT"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function everyMinute () {" created="Sat, 06 Nov 2021 20:26:21 GMT">
					<outline text="}" created="Sat, 06 Nov 2021 20:26:26 GMT"/>
					</outline>
				<outline text="function everySecond () {" created="Sat, 06 Nov 2021 20:26:21 GMT">
					<outline text="}" created="Sat, 06 Nov 2021 20:26:26 GMT"/>
					</outline>
				<outline text="function handleHttpRequest (theRequest) {" created="Sat, 06 Nov 2021 20:25:05 GMT">
					<outline text="var now = new Date ();"/>
					<outline text="const params = theRequest.params;"/>
					<outline text="const token = params.oauth_token;"/>
					<outline text="const secret = params.oauth_token_secret;"/>
					<outline text="function returnPlainText (s) {">
						<outline text="theRequest.httpReturn (200, &quot;text/plain&quot;, s.toString ());"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnHtml (htmltext) {">
						<outline text="theRequest.httpReturn (200, &quot;text/html&quot;, htmltext);"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnData (jstruct) {">
						<outline text="if (jstruct === undefined) {">
							<outline text="jstruct = {};"/>
							<outline text="}"/>
							</outline>
						<outline text="theRequest.httpReturn (200, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnError (jstruct) {">
						<outline text="theRequest.httpReturn (500, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnOpml (err, opmltext) {">
						<outline text="if (err) {">
							<outline text="returnError (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="theRequest.httpReturn (200, &quot;text/xml&quot;, opmltext);"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="function httpReturn (err, jstruct) {">
						<outline text="if (err) {">
							<outline text="returnError (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="returnData (jstruct);"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="function returnUserNewsProduct (screenname) { //9/25/22 by DW">
						<outline text="function checkUndefined (val) {" created="Tue, 27 Sep 2022 15:28:46 GMT">
							<outline text="if (val === undefined) {" created="Tue, 27 Sep 2022 15:28:57 GMT">
								<outline text="return (&quot;&quot;);" created="Tue, 27 Sep 2022 15:29:03 GMT"/>
								<outline text="}" created="Tue, 27 Sep 2022 15:29:08 GMT"/>
								</outline>
							<outline text="else {" created="Tue, 27 Sep 2022 15:29:09 GMT">
								<outline text="return (val);" created="Tue, 27 Sep 2022 15:29:10 GMT"/>
								<outline text="}" created="Tue, 27 Sep 2022 15:29:17 GMT"/>
								</outline>
							<outline text="}" created="Tue, 27 Sep 2022 15:28:52 GMT"/>
							</outline>
						<outline text="database.getUserPrefs (screenname, function (err, thePrefs) {" created="Sun, 25 Sep 2022 15:33:00 GMT">
							<outline text="if (err) {" created="Sun, 25 Sep 2022 15:39:20 GMT">
								<outline text="returnError (err);" created="Sun, 25 Sep 2022 15:39:23 GMT"/>
								<outline text="}" created="Sun, 25 Sep 2022 15:39:33 GMT"/>
								</outline>
							<outline text="else {" created="Sun, 25 Sep 2022 15:39:34 GMT">
								<outline text="if (thePrefs.emailSecret !== undefined) { //1/17/23 by DW" created="Tue, 17 Jan 2023 18:20:04 GMT">
									<outline text="delete thePrefs.emailSecret;" created="Tue, 17 Jan 2023 18:20:22 GMT"/>
									<outline text="}" created="Tue, 17 Jan 2023 18:20:18 GMT"/>
									</outline>
								<outline text="console.log (&quot;returnUserNewsProduct: thePrefs == &quot; + utils.jsonStringify (thePrefs));" created="Mon, 26 Sep 2022 17:42:41 GMT"/>
								<outline text="const newsProductInfo = {" created="Sun, 25 Sep 2022 16:11:34 GMT">
									<outline text="screenname," created="Sun, 25 Sep 2022 16:14:32 GMT"/>
									<outline text="categories: thePrefs.newsproductCategoryList," created="Sun, 25 Sep 2022 16:14:44 GMT"/>
									<outline text="title: thePrefs.newsproductTitle," created="Sun, 25 Sep 2022 16:12:04 GMT"/>
									<outline text="description: thePrefs.newsproductDescription," created="Sun, 25 Sep 2022 16:12:21 GMT"/>
									<outline text="image: thePrefs.newsproductImage," created="Sun, 25 Sep 2022 16:12:32 GMT"/>
									<outline text="style: thePrefs.newsproductStyle," created="Sun, 25 Sep 2022 16:12:40 GMT"/>
									<outline text="script: thePrefs.newsproductScript" created="Sun, 25 Sep 2022 16:12:47 GMT"/>
									<outline text="}" created="Sun, 25 Sep 2022 16:12:50 GMT"/>
									</outline>
								<outline text="const pagetable = {" created="Sun, 25 Sep 2022 16:24:04 GMT">
									<outline text="screenname, " created="Tue, 27 Sep 2022 15:22:39 GMT"/>
									<outline text="" created="Tue, 27 Sep 2022 15:22:42 GMT"/>
									<outline text="userPrefs: utils.jsonStringify (thePrefs)," created="Sun, 25 Sep 2022 16:24:10 GMT"/>
									<outline text="" created="Sun, 25 Sep 2022 16:37:23 GMT"/>
									<outline text="pageTitle: checkUndefined (newsProductInfo.title)," created="Sun, 25 Sep 2022 16:37:23 GMT"/>
									<outline text="pageDescription: checkUndefined (newsProductInfo.description)," created="Sun, 25 Sep 2022 16:37:50 GMT"/>
									<outline text="pageImage: checkUndefined (newsProductInfo.image)," created="Sun, 25 Sep 2022 16:38:17 GMT"/>
									<outline text="" created="Sun, 25 Sep 2022 16:37:53 GMT"/>
									<outline text="productname: config.productName,"/>
									<outline text="productnameForDisplay: config.productnameForDisplay,"/>
									<outline text="version: myVersion,"/>
									<outline text="urlServerForClient: config.urlFeedlandServer, //1/16/23 by DW"/>
									<outline text="urlServerForClient: undefined," isComment="true"/>
									<outline text="urlWebsocketServerForClient: undefined,"/>
									<outline text="flEnableLogin: undefined,"/>
									<outline text="prefsPath: undefined,"/>
									<outline text="docsPath: undefined,"/>
									<outline text="theOutlineInJson: undefined" created="Sun, 25 Sep 2022 16:32:20 GMT"/>
									<outline text="}" created="Sun, 25 Sep 2022 16:24:17 GMT"/>
									</outline>
								<outline text="" created="Tue, 17 Jan 2023 16:08:34 GMT"/>
								<outline text="console.log (&quot;returnUserNewsProduct: newsProductInfo == &quot; + utils.jsonStringify (newsProductInfo));" created="Mon, 26 Sep 2022 17:42:41 GMT"/>
								<outline text="console.log (&quot;returnUserNewsProduct: pagetable == &quot; + utils.jsonStringify (pagetable)); //1/17/23 by DW" created="Mon, 26 Sep 2022 17:42:41 GMT"/>
								<outline text="" created="Tue, 17 Jan 2023 16:08:37 GMT"/>
								<outline text="request (config.urlNewsProductSource, function (err, response, templatetext) {">
									<outline text="if (!err &amp;&amp; response.statusCode == 200) {">
										<outline text="const pagetext = utils.multipleReplaceAll (templatetext.toString (), pagetable, false, &quot;[%&quot;, &quot;%]&quot;);"/>
										<outline text="returnHtml (pagetext);"/>
										<outline text="}"/>
										</outline>
									<outline text="});"/>
									</outline>
								<outline text="}" created="Sun, 25 Sep 2022 15:39:38 GMT"/>
								</outline>
							<outline text="});" created="Sun, 25 Sep 2022 15:38:54 GMT"/>
							</outline>
						<outline text="return (true);" created="Sun, 25 Sep 2022 15:39:09 GMT"/>
						<outline text="}"/>
						</outline>
					<outline text="function callWithScreenname (callback) {">
						<outline text="davetwitter.getScreenName (token, secret, function (screenname) {" created="Wed, 09 Jul 2014 23:57:16 GMT" pgfnum="42784">
							<outline text="if (screenname === undefined) {" created="Thu, 10 Jul 2014 00:53:00 GMT" pgfnum="42793">
								<outline text="returnError ({message: &quot;Can't do the thing you want because the accessToken is not valid.&quot;});    "/>
								<outline text="}" created="Thu, 10 Jul 2014 00:53:11 GMT" pgfnum="42797"/>
								</outline>
							<outline text="else {" created="Thu, 10 Jul 2014 00:53:12 GMT" pgfnum="42798">
								<outline text="callback (screenname);"/>
								<outline text="}" created="Thu, 10 Jul 2014 00:53:14 GMT" pgfnum="42799"/>
								</outline>
							<outline text="});" created="Wed, 09 Jul 2014 23:57:25 GMT" pgfnum="42785"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="switch (theRequest.method) {" created="Thu, 01 May 2014 20:42:04 GMT" pgfnum="40803">
						<outline text="case &quot;POST&quot;:" isComment="true" created="Thu, 01 May 2014 20:42:39 GMT" pgfnum="40807">
							<outline text="switch (theRequest.lowerpath) {">
								<outline text="case &quot;/opmlsubscribe&quot;: //6/30/22 by DW" isComment="true" created="Thu, 26 May 2022 17:09:29 GMT">
									<outline text="callWithScreenname (function (screenname) {">
										<outline text="subscribeToOpml (screenname, theRequest.postBody, utils.getBoolean (params.flDeleteEnabled), httpReturn);" created="Fri, 20 May 2022 13:59:30 GMT"/>
										<outline text="});"/>
										</outline>
									<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="default: " created="Thu, 30 Jun 2022 15:30:25 GMT">
									<outline text="return (false); //not consumed" created="Thu, 30 Jun 2022 15:30:27 GMT"/>
									</outline>
								<outline text="}" created="Mon, 03 Feb 2014 03:20:25 GMT" pgfnum="36830"/>
								</outline>
							</outline>
						<outline text="case &quot;GET&quot;:" created="Thu, 01 May 2014 20:42:39 GMT" pgfnum="40807">
							<outline text="let screenname = utils.stringDelete (theRequest.lowerpath, 1, 1);" created="Mon, 26 Sep 2022 16:42:21 GMT"/>
							<outline text="if (screenname.length &gt; 0) { //something like /bullmancuso" created="Mon, 26 Sep 2022 16:42:33 GMT">
								<outline text="if (utils.endsWith (screenname, &quot;/&quot;)) {" created="Mon, 26 Sep 2022 17:41:31 GMT">
									<outline text="screenname = utils.stringMid (screenname, 1, screenname.length - 1);" created="Mon, 26 Sep 2022 17:42:04 GMT"/>
									<outline text="}" created="Mon, 26 Sep 2022 17:42:00 GMT"/>
									</outline>
								<outline text="returnUserNewsProduct (screenname);" created="Mon, 26 Sep 2022 16:43:31 GMT"/>
								<outline text="return (true); //consumed" created="Mon, 26 Sep 2022 17:46:15 GMT"/>
								<outline text="}" created="Mon, 26 Sep 2022 16:42:45 GMT"/>
								</outline>
							<outline text="else {" created="Mon, 26 Sep 2022 16:43:04 GMT">
								<outline text="return (false); //handle elsewhere" created="Mon, 26 Sep 2022 16:43:06 GMT"/>
								<outline text="}" created="Mon, 26 Sep 2022 16:43:11 GMT"/>
								</outline>
							<outline text="switch (theRequest.lowerpath) {" isComment="true">
								<outline text="case &quot;/returnjson&quot;:" created="Fri, 19 Nov 2021 15:43:41 GMT">
									<outline text="reallysimple.readFeed (theRequest.params.url, httpReturn);"/>
									<outline text="return (true); //we handled it" created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="case &quot;/returnopml&quot;:" created="Fri, 19 Nov 2021 15:43:41 GMT">
									<outline text="reallysimple.readFeed (theRequest.params.url, function (err, theFeed) {">
										<outline text="if (err) {" created="Fri, 19 Nov 2021 17:09:41 GMT">
											<outline text="returnError (err);" created="Fri, 19 Nov 2021 17:09:44 GMT"/>
											<outline text="}" created="Fri, 19 Nov 2021 17:09:48 GMT"/>
											</outline>
										<outline text="else {" created="Fri, 19 Nov 2021 17:09:49 GMT">
											<outline text="returnOpml (reallysimple.convertToOpml (theFeed));" created="Fri, 19 Nov 2021 17:10:05 GMT"/>
											<outline text="}" created="Fri, 19 Nov 2021 17:09:51 GMT"/>
											</outline>
										<outline text="});" created="Fri, 19 Nov 2021 17:09:36 GMT"/>
										</outline>
									<outline text="return (true); //we handled it" created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="case &quot;/checkfeednow&quot;:" created="Fri, 19 Nov 2021 15:43:41 GMT">
									<outline text="database.checkOneFeed (theRequest.params.url, httpReturn);"/>
									<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="case &quot;/getupdatedfeed&quot;:" created="Fri, 19 Nov 2021 15:43:41 GMT">
									<outline text="database.getUpdatedFeed (theRequest.params.url, httpReturn);"/>
									<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="case &quot;/getfeedrec&quot;:" created="Fri, 19 Nov 2021 15:43:41 GMT">
									<outline text="database.getDatabaseFeed (theRequest.params.url, httpReturn);"/>
									<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="case &quot;/getfeed&quot;:" created="Fri, 19 Nov 2021 15:43:41 GMT">
									<outline text="database.getFeed (theRequest.params.url, httpReturn);"/>
									<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="case &quot;/getriver&quot;:" created="Fri, 19 Nov 2021 15:43:41 GMT">
									<outline text="callWithScreenname (function (screenname) {">
										<outline text="database.getRiver (theRequest.params.url, screenname, httpReturn);"/>
										<outline text="});"/>
										</outline>
									<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="case &quot;/getriverfromonefeed&quot;: //4/13/22 by DW" isComment="true" created="Fri, 19 Nov 2021 15:43:41 GMT">
									<outline text="database.getRiverFromOneFeed (theRequest.params.url, httpReturn);"/>
									<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="case &quot;/deleteitem&quot;: //4/22/22 by DW" created="Fri, 19 Nov 2021 15:43:41 GMT">
									<outline text="database.deleteItem (theRequest.params.id, httpReturn);"/>
									<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="case &quot;/updateblogsettings&quot;: //4/28/22 by DW" created="Thu, 28 Apr 2022 13:42:12 GMT">
									<outline text="callWithScreenname (function (screenname) {">
										<outline text="blog.updateBlogSettings (theRequest.params.jsontext, screenname, httpReturn);"/>
										<outline text="});"/>
										</outline>
									<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="case &quot;/newblogpost&quot;: //4/28/22 by DW" created="Thu, 28 Apr 2022 13:42:12 GMT">
									<outline text="callWithScreenname (function (screenname) {">
										<outline text="blog.newPost (theRequest.params.jsontext, screenname, httpReturn);"/>
										<outline text="});"/>
										</outline>
									<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="case &quot;/updateblogpost&quot;: //4/30/22 by DW" created="Sat, 30 Apr 2022 16:19:41 GMT">
									<outline text="callWithScreenname (function (screenname) {">
										<outline text="blog.updatePost (theRequest.params.jsontext, screenname, httpReturn);"/>
										<outline text="});"/>
										</outline>
									<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="case &quot;/togglelike&quot;: //5/6/22 by DW" created="Sat, 30 Apr 2022 16:19:41 GMT">
									<outline text="callWithScreenname (function (screenname) {">
										<outline text="likes.toggleItemLike (screenname, theRequest.params.id, httpReturn);"/>
										<outline text="});"/>
										</outline>
									<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="case &quot;/getlikes&quot;: //5/6/22 by DW" created="Sat, 30 Apr 2022 16:19:41 GMT">
									<outline text="callWithScreenname (function (screenname) {">
										<outline text="likes.getLikes (theRequest.params.id, httpReturn);"/>
										<outline text="});"/>
										</outline>
									<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="case &quot;/getalotoflikes&quot;: //5/6/22 by DW" created="Sat, 30 Apr 2022 16:19:41 GMT">
									<outline text="callWithScreenname (function (screenname) {">
										<outline text="likes.getALotOLikes (theRequest.params.idarray, httpReturn);"/>
										<outline text="});"/>
										</outline>
									<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="case &quot;/getfollowers&quot;: //5/18/22 by DW" created="Sat, 30 Apr 2022 16:19:41 GMT">
									<outline text="callWithScreenname (function (screenname) {">
										<outline text="database.getFollowers (theRequest.params.url, httpReturn);"/>
										<outline text="});"/>
										</outline>
									<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="case &quot;/isusersubscribed&quot;: //5/18/22 by DW" created="Sat, 30 Apr 2022 16:19:41 GMT">
									<outline text="callWithScreenname (function (screenname) {">
										<outline text="database.isUserSubscribed (theRequest.params.url, screenname, httpReturn);"/>
										<outline text="});"/>
										</outline>
									<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="case &quot;/getusersubcriptions&quot;: //5/20/22 by DW" created="Sat, 30 Apr 2022 16:19:41 GMT">
									<outline text="viewers.getSubscriptions (theRequest.params.screenname, httpReturn);" created="Fri, 20 May 2022 13:59:30 GMT"/>
									<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="case &quot;/setfeedsubscount&quot;: //5/21/22 by DW" created="Sat, 30 Apr 2022 16:19:41 GMT">
									<outline text="database.setFeedSubsCount (theRequest.params.url, httpReturn);" created="Fri, 20 May 2022 13:59:30 GMT"/>
									<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="case &quot;/opml&quot;: //5/23/22 by DW" created="Sat, 30 Apr 2022 16:19:41 GMT">
									<outline text="viewers.getUserOpmlSubscriptions (params.screenname, params.category, returnOpml);" created="Fri, 20 May 2022 13:59:30 GMT"/>
									<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="case &quot;/opmlhotlist&quot;: //7/30/22 by DW" created="Sat, 23 Jul 2022 16:29:38 GMT">
									<outline text="viewers.getHotlistOpml (returnOpml);"/>
									<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="case &quot;/subscribe&quot;: //5/26/22 by DW" created="Thu, 26 May 2022 17:09:29 GMT">
									<outline text="callWithScreenname (function (screenname) {">
										<outline text="database.subscribeToFeed (screenname, params.url, httpReturn);" created="Fri, 20 May 2022 13:59:30 GMT"/>
										<outline text="database.addSubscription (screenname, params.url, httpReturn);" isComment="true" created="Fri, 20 May 2022 13:59:30 GMT"/>
										<outline text="});"/>
										</outline>
									<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="case &quot;/unsubscribe&quot;: //5/26/22 by DW" created="Thu, 26 May 2022 17:09:29 GMT">
									<outline text="callWithScreenname (function (screenname) {">
										<outline text="database.deleteSubscription (screenname, params.url, httpReturn);" created="Fri, 20 May 2022 13:59:30 GMT"/>
										<outline text="});"/>
										</outline>
									<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="case &quot;/unsublist&quot;: //6/28/22 by DW" created="Thu, 26 May 2022 17:09:29 GMT">
									<outline text="callWithScreenname (function (screenname) {">
										<outline text="var theArray = new Array ();" created="Tue, 28 Jun 2022 16:55:23 GMT"/>
										<outline text="try {" created="Tue, 28 Jun 2022 16:55:23 GMT">
											<outline text="theArray = JSON.parse (params.list);" created="Tue, 28 Jun 2022 16:55:42 GMT"/>
											<outline text="}" created="Tue, 28 Jun 2022 16:55:35 GMT"/>
											</outline>
										<outline text="catch (err) {" created="Tue, 28 Jun 2022 16:55:36 GMT">
											<outline text="returnError (err);" created="Tue, 28 Jun 2022 16:56:14 GMT"/>
											<outline text="}" created="Tue, 28 Jun 2022 16:55:39 GMT"/>
											</outline>
										<outline text="if (theArray.length &gt; 0) {" created="Tue, 28 Jun 2022 16:55:23 GMT">
											<outline text="unsubList (screenname, theArray, httpReturn);" created="Fri, 20 May 2022 13:59:30 GMT"/>
											<outline text="}" created="Tue, 28 Jun 2022 16:56:54 GMT"/>
											</outline>
										<outline text="});"/>
										</outline>
									<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="case &quot;/getrecentsubscriptions&quot;: //7/23/22 by DW" created="Sat, 23 Jul 2022 16:29:38 GMT">
									<outline text="callWithScreenname (function (screenname) {">
										<outline text="database.getRecentSubscriptions (httpReturn);"/>
										<outline text="});"/>
										</outline>
									<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="case &quot;/gethotlist&quot;: //7/30/22 by DW" created="Sat, 23 Jul 2022 16:29:38 GMT">
									<outline text="callWithScreenname (function (screenname) {">
										<outline text="viewers.getHotlist (httpReturn);"/>
										<outline text="});"/>
										</outline>
									<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="" created="Wed, 03 Aug 2022 13:09:59 GMT"/>
								<outline text="case &quot;/getriverfromlist&quot;: //8/3/22 by DW" created="Wed, 03 Aug 2022 13:09:12 GMT">
									<outline text="database.getRiverFromList (params.list, httpReturn);" created="Wed, 03 Aug 2022 13:10:40 GMT"/>
									<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="" created="Wed, 03 Aug 2022 13:09:12 GMT"/>
								<outline text="default: " created="Thu, 30 Jun 2022 15:30:25 GMT">
									<outline text="return (false); //not consumed" created="Thu, 30 Jun 2022 15:30:27 GMT"/>
									</outline>
								<outline text="}" created="Mon, 03 Feb 2014 03:20:25 GMT" pgfnum="36830"/>
								</outline>
							<outline text="break;" created="Thu, 01 May 2014 20:42:44 GMT" pgfnum="40808"/>
							</outline>
						<outline text="}" created="Thu, 01 May 2014 20:42:10 GMT" pgfnum="40804"/>
						</outline>
					<outline text="return (false); //not consumed"/>
					<outline text="}" created="Sat, 06 Nov 2021 20:25:18 GMT"/>
					</outline>
				<outline text="function asyncAddMacroToPagetable (pagetable, theRequest, callback) {" created="Tue, 14 Dec 2021 16:13:25 GMT">
					<outline text="pagetable.urlTemplate = theRequest.params.template;"/>
					<outline text="if (pagetable.urlTemplate === undefined) {" created="Wed, 10 Aug 2022 14:51:55 GMT">
						<outline text="pagetable.urlTemplate = &quot;http://scripting.com/publicfolder/feedland/rivers/firstTabbedRiver.opml&quot;" created="Wed, 10 Aug 2022 14:52:19 GMT"/>
						<outline text="}" created="Wed, 10 Aug 2022 14:52:02 GMT"/>
						</outline>
					<outline text="httpReadOutline (pagetable.urlTemplate, function (err, theOutline) {" created="Wed, 10 Aug 2022 19:23:46 GMT">
						<outline text="var title = pagetable.productNameForDisplay, description = undefined;" isComment="true" created="Wed, 10 Aug 2022 16:38:17 GMT"/>
						<outline text="if (!err) {" isComment="true" created="Wed, 10 Aug 2022 19:24:17 GMT">
							<outline text="if (theOutline.opml.head.title !== undefined) {" created="Wed, 10 Aug 2022 19:24:28 GMT">
								<outline text="title = theOutline.opml.head.title;" created="Wed, 10 Aug 2022 19:25:08 GMT"/>
								<outline text="}" created="Wed, 10 Aug 2022 19:24:57 GMT"/>
								</outline>
							<outline text="if (theOutline.opml.head.description !== undefined) {" created="Wed, 10 Aug 2022 19:24:28 GMT">
								<outline text="description = theOutline.opml.head.description;" created="Wed, 10 Aug 2022 19:25:08 GMT"/>
								<outline text="}" created="Wed, 10 Aug 2022 19:24:57 GMT"/>
								</outline>
							<outline text="if (theOutline.opml.head.image !== undefined) {" created="Wed, 10 Aug 2022 19:24:28 GMT">
								<outline text="image = theOutline.opml.head.image;" created="Wed, 10 Aug 2022 19:25:08 GMT"/>
								<outline text="}" created="Wed, 10 Aug 2022 19:24:57 GMT"/>
								</outline>
							<outline text="}" created="Wed, 10 Aug 2022 19:24:21 GMT"/>
							</outline>
						<outline text="function getHeadAtt (name) {" created="Thu, 11 Aug 2022 13:54:54 GMT">
							<outline text="var attval = &quot;&quot;;" created="Thu, 11 Aug 2022 13:56:01 GMT"/>
							<outline text="try {" created="Thu, 11 Aug 2022 13:57:09 GMT">
								<outline text="if (theOutline.opml.head [name] !== undefined) {" created="Wed, 10 Aug 2022 19:24:28 GMT">
									<outline text="attval = theOutline.opml.head [name];" created="Wed, 10 Aug 2022 19:25:08 GMT"/>
									<outline text="}" created="Wed, 10 Aug 2022 19:24:57 GMT"/>
									</outline>
								<outline text="}" created="Thu, 11 Aug 2022 13:57:20 GMT"/>
								</outline>
							<outline text="catch (err) {" created="Thu, 11 Aug 2022 13:57:30 GMT">
								<outline text="}" created="Thu, 11 Aug 2022 13:57:34 GMT"/>
								</outline>
							<outline text="return (attval);" created="Thu, 11 Aug 2022 13:55:53 GMT"/>
							<outline text="}" created="Thu, 11 Aug 2022 13:55:03 GMT"/>
							</outline>
						<outline text="pagetable.pageTitle = getHeadAtt (&quot;title&quot;);" created="Wed, 10 Aug 2022 16:38:17 GMT"/>
						<outline text="pagetable.pageDescription = getHeadAtt (&quot;description&quot;);" created="Wed, 10 Aug 2022 16:38:17 GMT"/>
						<outline text="" created="Thu, 11 Aug 2022 13:59:55 GMT"/>
						<outline text="var imageUrl = getHeadAtt (&quot;image&quot;);" created="Thu, 11 Aug 2022 13:59:55 GMT"/>
						<outline text="if (imageUrl.length != 0) {" created="Thu, 11 Aug 2022 14:00:09 GMT">
							<outline text="pagetable.pageImage = &quot;&lt;img src=\&quot;&quot; + imageUrl + &quot;\&quot;&gt;&quot;;" created="Thu, 11 Aug 2022 14:00:22 GMT"/>
							<outline text="}" created="Thu, 11 Aug 2022 14:00:18 GMT"/>
							</outline>
						<outline text="else {" created="Wed, 24 Aug 2022 16:41:27 GMT">
							<outline text="pagetable.pageImage = &quot;&quot;;" created="Wed, 24 Aug 2022 16:41:34 GMT"/>
							<outline text="}" created="Wed, 24 Aug 2022 16:41:29 GMT"/>
							</outline>
						<outline text="" created="Thu, 11 Aug 2022 15:06:42 GMT"/>
						<outline text="if (config.flExpandIncludes) { //8/22/22 by DW" created="Mon, 22 Aug 2022 14:55:36 GMT">
							<outline text="opml.expandIncludes (theOutline, function (theNewOutline) { //8/11/22 by DW" created="Wed, 11 May 2022 21:00:45 GMT">
								<outline text="console.log (JSON.stringify (theNewOutline, undefined, 4));" isComment="true" created="Wed, 11 May 2022 21:01:15 GMT"/>
								<outline text="pagetable.theOutlineInJson = utils.jsonStringify (theNewOutline);" created="Thu, 11 Aug 2022 15:06:43 GMT"/>
								<outline text="callback ();" created="Wed, 10 Aug 2022 19:25:18 GMT"/>
								<outline text="});" created="Wed, 11 May 2022 21:01:00 GMT"/>
								</outline>
							<outline text="}" created="Mon, 22 Aug 2022 14:55:39 GMT"/>
							</outline>
						<outline text="else {" created="Mon, 22 Aug 2022 14:55:59 GMT">
							<outline text="pagetable.theOutlineInJson = utils.jsonStringify (theOutline);" created="Thu, 11 Aug 2022 15:06:43 GMT"/>
							<outline text="callback ();" created="Wed, 10 Aug 2022 19:25:18 GMT"/>
							<outline text="}" created="Mon, 22 Aug 2022 14:56:02 GMT"/>
							</outline>
						<outline text="});" created="Wed, 10 Aug 2022 19:24:06 GMT"/>
						</outline>
					<outline text="}" created="Tue, 14 Dec 2021 16:13:29 GMT"/>
					</outline>
				<outline text="function addMacroToPagetable (pagetable, theRequest) {" created="Tue, 14 Dec 2021 16:13:25 GMT">
					<outline text="pagetable.pageTitle = pagetable.productNameForDisplay;" created="Wed, 10 Aug 2022 16:38:17 GMT"/>
					<outline text="pagetable.urlTemplate = theRequest.params.template;"/>
					<outline text="pagetable.newsProductInfo = &quot;undefined&quot;; //9/25/22 by DW -- allows us to use the same riverClient in the CNAME version and in the outline-based version." created="Mon, 26 Sep 2022 16:53:32 GMT"/>
					<outline text="if (pagetable.urlTemplate === undefined) {" created="Wed, 10 Aug 2022 14:51:55 GMT">
						<outline text="pagetable.urlTemplate = &quot;http://scripting.com/publicfolder/feedland/rivers/firstTabbedRiver.opml&quot;" created="Wed, 10 Aug 2022 14:52:19 GMT"/>
						<outline text="}" created="Wed, 10 Aug 2022 14:52:02 GMT"/>
						</outline>
					<outline text="pagetable.userPrefs = &quot;undefined&quot;; //9/29/22 by DW" created="Thu, 29 Sep 2022 11:51:32 GMT"/>
					<outline text="pagetable.urlServerForClient = config.urlFeedlandServer; //1/17/23 by DW"/>
					<outline text="}" created="Tue, 14 Dec 2021 16:13:29 GMT"/>
					</outline>
				<outline text="function startup () {" created="Sat, 16 Jul 2022 17:52:56 GMT">
					<outline text="readObject (&quot;config.json&quot;, config, function () {" created="Sat, 16 Jul 2022 17:54:09 GMT">
						<outline text="console.log (&quot;config == &quot; + utils.jsonStringify (config));" created="Sat, 16 Jul 2022 17:54:35 GMT"/>
						<outline text="var options = {">
							<outline text="everySecond,"/>
							<outline text="everyMinute,"/>
							<outline text="httpRequest: handleHttpRequest,"/>
							<outline text="addMacroToPagetable," created="Tue, 14 Dec 2021 16:13:11 GMT"/>
							<outline text="asyncAddMacroToPagetable" created="Wed, 10 Aug 2022 19:23:02 GMT"/>
							<outline text="}"/>
							</outline>
						<outline text="daveappserver.start (options, function (appConfig) {">
							<outline text="for (var x in appConfig) {" created="Mon, 29 Nov 2021 15:51:41 GMT">
								<outline text="config [x] = appConfig [x];" created="Mon, 29 Nov 2021 15:51:48 GMT"/>
								<outline text="}" created="Mon, 29 Nov 2021 15:51:53 GMT"/>
								</outline>
							<outline text="davesql.start (config.database, function () {">
								<outline text="database.start (config, function () {" created="Sat, 19 Mar 2022 14:53:24 GMT">
									<outline text="database.feedRec (&quot;https://github.com/scripting/tweets.opml.org/raw/main/users/davewiner/rss.xml&quot;, function (err, data) {" isComment="true" created="Sun, 20 Mar 2022 16:35:22 GMT">
										<outline text="});" created="Sun, 20 Mar 2022 16:35:48 GMT"/>
										</outline>
									<outline text="setTimeout (function () { //give the client time to re-establish broken connection" isComment="true">
										<outline text="http://oldschool.scripting.com/cluelessnewbie/rss.xml" isComment="true" created="Fri, 25 Mar 2022 17:12:09 GMT"/>
										<outline text="http://scripting.com/rss.xml" isComment="true" created="Fri, 25 Mar 2022 17:12:09 GMT"/>
										<outline text="database.checkFeedAndItems (&quot;http://scripting.com/rss.xml&quot;, function (err, data) {" created="Sun, 20 Mar 2022 16:35:22 GMT">
											<outline text="});" created="Sun, 20 Mar 2022 16:35:48 GMT"/>
											</outline>
										<outline text="}, 1000);"/>
										</outline>
									<outline text="database.backupDatabase (); //testing " isComment="true" created="Mon, 22 Aug 2022 18:37:36 GMT"/>
									<outline text="});" created="Sat, 19 Mar 2022 14:53:34 GMT"/>
									</outline>
								<outline text="});" created="Wed, 14 Jul 2021 13:51:16 GMT"/>
								</outline>
							<outline text="});" created="Sat, 06 Nov 2021 17:09:03 GMT"/>
							</outline>
						<outline text="});" created="Sat, 16 Jul 2022 17:54:20 GMT"/>
						</outline>
					<outline text="}" created="Sat, 16 Jul 2022 17:53:40 GMT"/>
					</outline>
				<outline text="startup ();" created="Sat, 16 Jul 2022 17:53:40 GMT"/>
				</outline>
			<outline text="backup/readme.md" created="Wed, 10 Aug 2022 14:28:56 GMT">
				<outline text="# News Product Server" created="Wed, 10 Aug 2022 14:28:58 GMT">
					<outline text="A &lt;a href=&quot;http://docs.feedland.org/newsProducts.opml&quot;&gt;news product&lt;/a&gt; is a one-page website you create with FeedLand for people outside of FeedLand to read." created="Wed, 10 Aug 2022 14:29:07 GMT"/>
					</outline>
				<outline text="### What is this? " created="Thu, 19 Jan 2023 15:25:27 GMT">
					<outline text="This is the News Product server, which is a Node.js application. " created="Tue, 17 Jan 2023 17:36:47 GMT"/>
					<outline text="It is tied to a single instance of FeedLand server." created="Thu, 19 Jan 2023 16:15:07 GMT"/>
					<outline text="Installing it is optional. If you install it you will be able to implement news products with your server. " created="Thu, 19 Jan 2023 16:14:10 GMT"/>
					</outline>
				<outline text="### How to setup" created="Thu, 19 Jan 2023 15:25:55 GMT">
					<outline text="1. Download the folder." created="Thu, 19 Jan 2023 15:26:00 GMT"/>
					<outline text="2. Move the files into the folder you're going to serve the site from." created="Thu, 19 Jan 2023 16:09:13 GMT"/>
					<outline text="3. npm install" created="Thu, 19 Jan 2023 16:09:28 GMT"/>
					<outline text="4. Edit config.json. A &lt;a href=&quot;https://github.com/scripting/newsProductServer/blob/main/config.json&quot;&gt;template&lt;/a&gt; is provided in the folder. Following this section is a list of values you must change in config.json.  " created="Thu, 19 Jan 2023 16:09:32 GMT"/>
					<outline text="5. Launch the newsproduct.js app." created="Thu, 19 Jan 2023 16:10:59 GMT"/>
					<outline text="6. In your FeedLand install, in its config.json file add a &quot;urlNewsProducts&quot; element with the web address of this server and relaunch it." created="Thu, 19 Jan 2023 16:11:04 GMT"/>
					</outline>
				<outline text="### What to change in config.json" created="Thu, 19 Jan 2023 16:10:49 GMT">
					<outline text="urlFeedlandServer: the web address of your FeedLand server. "/>
					<outline text="port: the port your newsProductServer should run on." created="Thu, 19 Jan 2023 16:12:41 GMT"/>
					<outline text="myDomain: the web address of your newsProductServer." created="Thu, 19 Jan 2023 16:13:04 GMT"/>
					<outline text="database: the same setup you used for your FeedLand instance. The newsProductServer app directly accesses the database. " created="Thu, 19 Jan 2023 16:13:18 GMT"/>
					</outline>
				</outline>
			<outline text="readme.md" created="Sun, 17 Sep 2023 17:29:50 GMT">
				<outline text="# News Product Server" created="Wed, 10 Aug 2022 14:28:58 GMT">
					<outline text="A &lt;a href=&quot;http://docs.feedland.org/newsProducts.opml&quot;&gt;news product&lt;/a&gt; is a one-page website you create with FeedLand for people outside of FeedLand to read." created="Wed, 10 Aug 2022 14:29:07 GMT"/>
					</outline>
				<outline text="### This project is done" created="Sun, 17 Sep 2023 17:30:03 GMT">
					<outline text="I integrated the capabilities of the news product server in FeedLand itself. This app is no longer necessary." created="Sun, 17 Sep 2023 17:30:13 GMT"/>
					<outline text="I replaced it with an app that gets the html text from feedland.org and returns it. So you don't have to modify anything to keep your product running. " created="Sun, 17 Sep 2023 17:30:34 GMT"/>
					<outline text="Look to the FeedLandInstall repo for instructions on how to set it up. (Coming soon.)" created="Sun, 17 Sep 2023 17:31:06 GMT"/>
					</outline>
				</outline>
			<outline text="config.json" created="Tue, 17 Jan 2023 17:23:21 GMT">
				<outline text="{">
					<outline text="&quot;productName&quot;: &quot;newsProduct&quot;,"/>
					<outline text="&quot;productNameForDisplay&quot;: &quot;NewsProduct&quot;,"/>
					<outline text=""/>
					<outline text="&quot;flEnableLogin&quot;: true,"/>
					<outline text=""/>
					<outline text="&quot;urlFeedlandServer&quot;: &quot;http://my.server.com/&quot;,"/>
					<outline text=""/>
					<outline text="&quot;urlServerHomePageSource&quot;: &quot;http://scripting.com/code/riverclient/index.html&quot;,"/>
					<outline text=""/>
					<outline text="&quot;prefsPath&quot;: &quot;prefs.json&quot;,"/>
					<outline text="&quot;docsPath&quot;: &quot;&quot;,"/>
					<outline text=""/>
					<outline text="&quot;port&quot;: 1458,"/>
					<outline text="&quot;flWebsocketEnabled&quot;: true,"/>
					<outline text="&quot;websocketPort&quot;: 1459,"/>
					<outline text=""/>
					<outline text="&quot;myDomain&quot;: &quot;product.server.com&quot;,"/>
					<outline text=""/>
					<outline text="&quot;database&quot;: {">
						<outline text="&quot;host&quot;: &quot;mydatabaseprovider.com&quot;,"/>
						<outline text="&quot;port&quot;: 40303,"/>
						<outline text="&quot;user&quot;: &quot;admin&quot;,"/>
						<outline text="&quot;password&quot;: &quot;xxx&quot;,"/>
						<outline text="&quot;charset&quot;: &quot;utf8mb4&quot;,"/>
						<outline text="&quot;connectionLimit&quot;: 100,"/>
						<outline text="&quot;database&quot;: &quot;feedland&quot;,"/>
						<outline text="&quot;debug&quot;: false,"/>
						<outline text="&quot;flLogQueries&quot;: false,"/>
						<outline text="&quot;flQueueAllRequests&quot;: false"/>
						<outline text="},"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			</outline>
		<outline text="build script" created="Wed, 10 Aug 2022 14:24:31 GMT">
			<outline text="nodeEditorSuite.utilities.buildINewsProductServer ()" created="Fri, 18 Feb 2022 16:51:42 GMT"/>
			</outline>
		</body>
	</opml>
